{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","table","firstElementChild","cell","addRow","removeRow","addColumn","removeColumn","maxCount","minCount","addEventListener","event","target","targetClasses","classList","tableChildrens","children","includes","append","cloneNode","lastElementChild","remove","forEach","element","length","disabled"],"mappings":";AAAA,aAeA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAbA,IAAMA,EAAYC,SAASC,cAAc,cAEnCC,EAAQH,EAAUE,cAAc,UAAUE,kBAC1CC,EAAOF,EAAMC,kBAAkBA,kBAE/BE,EAASN,EAAUE,cAAc,eACjCK,EAAYP,EAAUE,cAAc,eACpCM,EAAYR,EAAUE,cAAc,kBACpCO,EAAeT,EAAUE,cAAc,kBAEvCQ,EAAW,GACXC,EAAW,EAEjBX,EAAUY,iBAAiB,QAAS,SAACC,GAC7BC,IACAC,EADSF,EAAMC,OACQE,UACvBC,EAAiBd,EAAMe,SAEzB,GAAC,EAAIH,GAAeI,SAAS,UAA7B,CAsBI,OAlBJ,EAAIJ,GAAeI,SAAS,eAC9BhB,EAAMiB,OAAOjB,EAAMC,kBAAkBiB,WAAU,IAG7C,EAAIN,GAAeI,SAAS,eAC9BhB,EAAMmB,iBAAiBC,SAGrB,EAAIR,GAAeI,SAAS,kBAC1BF,EAAAA,GAAgBO,QAAQ,SAAAC,GAC1BA,EAAQL,OAAOf,EAAKgB,WAAU,MAI9B,EAAIN,GAAeI,SAAS,kBAC1BF,EAAAA,GAAgBO,QAAQ,SAAAC,GAAWA,OAAAA,EAAQH,iBAAiBC,YAG1D,GACDN,KAAAA,EAAeS,SAAWf,EAC7BJ,EAAUoB,UAAW,EACrB,MACGV,KAAAA,EAAeS,SAAWhB,EAC7BJ,EAAOqB,UAAW,EAClB,MACF,QACEpB,EAAUoB,UAAW,EACrBrB,EAAOqB,UAAW,EAGd,QAAA,GACDV,KAAAA,EAAe,GAAGC,SAASQ,SAAWf,EACzCF,EAAakB,UAAW,EACxB,MACGV,KAAAA,EAAe,GAAGC,SAASQ,SAAWhB,EACzCF,EAAUmB,UAAW,EACrB,MACF,QACElB,EAAakB,UAAW,EACxBnB,EAAUmB,UAAW","file":"main.a1c66e7e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\n\nconst table = container.querySelector('.field').firstElementChild;\nconst cell = table.firstElementChild.firstElementChild;\n\nconst addRow = container.querySelector('.append-row');\nconst removeRow = container.querySelector('.remove-row');\nconst addColumn = container.querySelector('.append-column');\nconst removeColumn = container.querySelector('.remove-column');\n\nconst maxCount = 10;\nconst minCount = 2;\n\ncontainer.addEventListener('click', (event) => {\n  const target = event.target;\n  const targetClasses = target.classList;\n  const tableChildrens = table.children;\n\n  if (![...targetClasses].includes('button')) {\n    return;\n  }\n\n  if ([...targetClasses].includes('append-row')) {\n    table.append(table.firstElementChild.cloneNode(true));\n  }\n\n  if ([...targetClasses].includes('remove-row')) {\n    table.lastElementChild.remove();\n  }\n\n  if ([...targetClasses].includes('append-column')) {\n    [...tableChildrens].forEach(element => {\n      element.append(cell.cloneNode(true));\n    });\n  }\n\n  if ([...targetClasses].includes('remove-column')) {\n    [...tableChildrens].forEach(element => element.lastElementChild.remove());\n  }\n\n  switch (true) {\n    case tableChildrens.length === minCount :\n      removeRow.disabled = true;\n      break;\n    case tableChildrens.length === maxCount :\n      addRow.disabled = true;\n      break;\n    default :\n      removeRow.disabled = false;\n      addRow.disabled = false;\n  }\n\n  switch (true) {\n    case tableChildrens[0].children.length === minCount :\n      removeColumn.disabled = true;\n      break;\n    case tableChildrens[0].children.length === maxCount :\n      addColumn.disabled = true;\n      break;\n    default :\n      removeColumn.disabled = false;\n      addColumn.disabled = false;\n  }\n});\n"]}